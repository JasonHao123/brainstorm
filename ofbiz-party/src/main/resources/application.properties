redis.host=${HOST}
redis.port=6379
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://${HOST}:3306/ofbiz
spring.datasource.username=ofbiz
spring.datasource.password=ofbiz
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create
# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


# Spring Boot
endpoints.enabled=false
endpoints.health.enabled=true

# configure zipkin
camel.zipkin.endpoint=http://${HOST}:9411/api/v2/spans

# the zipkin service name
#camel.zipkin.server-service-mappings.*=service1
#camel.zipkin.client-service-mappings.*=service2

# include message bodies in the traces (not recommended for production)
camel.zipkin.include-message-body-streams=true

# logging to see the zipkin traces
logging.level.org.apache.camel.zipkin=debug
logging.level.org.springframework=debug
logging.level.org.hibernate=info



# Camel
camel.springboot.main-run-controller=true
camel.springboot.jmx-enabled=false

camel.rest.component=servlet
camel.rest.binding-mode=auto

# Configure the underlying Service Call component
camel.cloud.service-call.component = undertow


