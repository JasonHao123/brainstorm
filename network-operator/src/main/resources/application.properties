server.port=8443
server.ssl.enabled=true
server.ssl.key-alias=ca
server.ssl.key-password=changeit
server.ssl.key-store=classpath:ssl-server.jks
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.trust-store=classpath:truststore.jks
server.ssl.trust-store-password=changeit

operator.key=Bar12345Bar12345
operator.processorName=FileConsumer
operator.keyAlgorithm=AES
operator.cryptoAlgorithm=AES/CBC/PKCS5PADDING
operator.initializationVector=RandomInitVector


blacklist.punishTime=1
blacklist.punishCount=3
blacklist.forbidden=10


# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/yourdb
spring.datasource.username=changeit
spring.datasource.password=changeit
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=create-drop
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


# Spring Boot
endpoints.enabled=false
endpoints.health.enabled=true

# configure zipkin
camel.zipkin.endpoint=http://192.168.11.251:9411/api/v2/spans

# the zipkin service name
#camel.zipkin.server-service-mappings.*=service1
#camel.zipkin.client-service-mappings.*=service2

# include message bodies in the traces (not recommended for production)
camel.zipkin.include-message-body-streams=true

# logging to see the zipkin traces
logging.level.org.apache.camel.zipkin=info
logging.level.org.springframework=info
logging.level.org.hibernate=info



# Camel
camel.springboot.main-run-controller=true
camel.springboot.jmx-enabled=false

camel.rest.component=servlet
camel.rest.binding-mode=auto

# Configure the underlying Service Call component
camel.cloud.service-call.component = undertow

# Configure service filter
#camel.cloud.service-filter.blacklist[service-1] = localhost:9012

# Configure additional services
#camel.cloud.service-discovery.services[service-2] = localhost:9021,localhost:9022,localhost:9023

# Consul
#
# this property is not mandatory and it has been included to show how to configure
# the service discovery implementation provided by camel-consul
camel.cloud.consul.service-discovery.url=http://192.168.11.251:8500
